<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="raisetech.studentmanagement.repository.StudentRepository">
  <!-- 受講生情報の全件検索 -->
  <select id="searchStudent" resultType="raisetech.studentmanagement.data.Student">
    SELECT * FROM students
  </select>

  <!-- コース情報の全件検索 -->
  <select id="searchStudentCourse" resultType="raisetech.studentmanagement.data.StudentCourse">
    SELECT * FROM students_courses
  </select>

  <!-- コース申し込み状況の全件検索 -->
  <select id="searchCourseApplicationStatus" resultType="raisetech.studentmanagement.data.CourseApplicationStatus">
    SELECT * FROM course_application_statuses
  </select>

  <!-- IDで指定した受講生情報の検索 -->
  <select id="findStudentById" parameterType="int" resultType="raisetech.studentmanagement.data.Student">
    SELECT * FROM students WHERE id = #{id}
  </select>

  <!-- 受講生IDで指定した受講生のコース情報 -->
  <select id="findStudentCoursesByStudentId" parameterType="int" resultType="raisetech.studentmanagement.data.StudentCourse">
    SELECT * FROM students_courses WHERE student_id = #{studentId}
  </select>

  <!-- コースIDで指定したコースの申し込み状況 -->
  <select id="findCourseApplicationStatusByCourseId" parameterType="int" resultType="raisetech.studentmanagement.data.CourseApplicationStatus">
    SELECT * FROM course_application_statuses WHERE course_id = #{courseId}
  </select>

  <!-- 条件を指定して受講生詳細を検索 -->
  <select id="searchStudentDetail" resultMap="StudentDetailResultMap">
    SELECT
    s.id AS student_id,
    s.full_name,
    s.furigana,
    s.nickname,
    s.email_address,
    s.area,
    s.age,
    s.gender,
    s.remark,
    s.is_deleted,
    sc.id AS student_course_id,
    sc.student_id,
    sc.course_name,
    sc.start_date,
    sc.end_date,
    cas.id AS course_application_status_id,
    cas.course_id,
    cas.status
    FROM
    students s
    LEFT JOIN
    students_courses sc ON s.id = sc.student_id
    LEFT JOIN
    course_application_statuses cas ON sc.id = cas.course_id
    WHERE
    s.is_deleted IS false
    <if test="fullName != null and fullName != ''">
      AND s.full_name LIKE CONCAT('%', #{fullName}, '%')
    </if>
    <if test="furigana != null and furigana != ''">
      AND s.furigana LIKE CONCAT('%', #{furigana}, '%')
    </if>
    <if test="nickname != null and nickname != ''">
      AND s.nickname LIKE CONCAT('%', #{nickname}, '%')
    </if>
    <if test="emailAddress != null and emailAddress != ''">
      AND s.email_address LIKE CONCAT('%', #{emailAddress}, '%')
    </if>
    <if test="area != null and area != ''">
      AND s.area LIKE CONCAT('%', #{area}, '%')
    </if>
    <if test="age != null">
      AND s.age = #{age}
    </if>
    <if test="gender != null and gender != ''">
      AND s.gender = #{gender}
    </if>
    <if test="remark != null and remark != ''">
      AND s.remark LIKE CONCAT('%', #{remark}, '%')
    </if>
    <if test="courseName != null and courseName != ''">
      AND sc.course_name LIKE CONCAT('%', #{courseName}, '%')
    </if>
    <if test="startDate != null and startDate != ''">
      AND sc.start_date >= #{startDate}
    </if>
    <if test="endDate != null and endDate != ''">
      AND sc.end_date &lt;= #{endDate}
    </if>
    <if test="status != null and status != ''">
      AND cas.status LIKE CONCAT('%', #{status}, '%')
    </if>
  </select>

  <!-- 新規受講生情報の登録 -->
  <insert id="insertStudent" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO students (full_name, furigana, nickname, email_address, area, age, gender, remark, is_deleted)
    VALUES (#{fullName}, #{furigana}, #{nickname}, #{emailAddress}, #{area}, #{age}, #{gender}, #{remark}, false)
  </insert>

  <!-- 新規コース情報の登録 -->
  <insert id="insertStudentCourse" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO students_courses (student_id, course_name, start_date, end_date)
    VALUES (#{studentId}, #{courseName}, #{startDate}, #{endDate})
  </insert>

  <!-- 新規申し込み状況の登録 -->
  <insert id="insertCourseApplicationStatus" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO course_application_statuses (course_id, status)
    VALUES (#{courseId}, #{status})
  </insert>

  <!-- 受講生情報の更新 -->
  <update id="updateStudent">
    UPDATE students
    SET full_name = #{fullName},
    furigana = #{furigana},
    nickname = #{nickname},
    email_address = #{emailAddress},
    area = #{area},
    age = #{age},
    gender = #{gender},
    remark = #{remark},
    is_deleted = #{isDeleted}
    WHERE id = #{id}
  </update>

  <!-- コース情報の更新 -->
  <update id="updateStudentCourse">
    UPDATE students_courses
    <set>
      <trim suffixOverrides=",">
        course_name = #{courseName},
        <if test="startDate != null"> start_date = #{startDate}, </if>
        <if test="endDate != null"> end_date = #{endDate}, </if>
      </trim>
    </set>
    WHERE id = #{id} AND student_id = #{studentId}
  </update>

  <!-- 申し込み状況の更新 -->
  <update id="updateCourseApplicationStatus">
    UPDATE course_application_statuses
    SET status = #{status}
    WHERE course_id = #{courseId}
  </update>

  <!-- StudentDetail のマッピング -->
  <resultMap id="StudentDetailResultMap" type="raisetech.studentmanagement.domain.StudentDetail">
    <!-- Student のマッピング -->
    <association property="student" javaType="raisetech.studentmanagement.data.Student">
      <id column="student_id" property="id"/>
      <result column="full_name" property="fullName"/>
      <result column="furigana" property="furigana"/>
      <result column="nickname" property="nickname"/>
      <result column="email_address" property="emailAddress"/>
      <result column="area" property="area"/>
      <result column="age" property="age"/>
      <result column="gender" property="gender"/>
      <result column="remark" property="remark"/>
      <result column="is_deleted" property="isDeleted"/>
    </association>

    <!-- StudentCourseDetail のマッピング -->
    <collection property="studentCourseDetailList" ofType="raisetech.studentmanagement.domain.StudentCourseDetail">
      <!-- StudentCourse のマッピング -->
      <association property="studentCourse" javaType="raisetech.studentmanagement.data.StudentCourse">
        <id column="student_course_id" property="id"/>
        <result column="student_id" property="studentId"/>
        <result column="course_name" property="courseName"/>
        <result column="start_date" property="startDate"/>
        <result column="end_date" property="endDate"/>
      </association>

      <!-- CourseApplicationStatus のマッピング -->
      <association property="courseApplicationStatus" javaType="raisetech.studentmanagement.data.CourseApplicationStatus">
        <id column="course_application_status_id" property="id"/>
        <result column="course_id" property="courseId"/>
        <result column="status" property="status"/>
      </association>
    </collection>
  </resultMap>

</mapper>
